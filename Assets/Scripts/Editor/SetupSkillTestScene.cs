using UnityEngine;
using UnityEditor;
using UnityEditor.SceneManagement;
using UnityEngine.SceneManagement;

/// <summary>
/// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ü–µ–Ω—ã –¥–ª—è —Å–∫–∏–ª–ª–æ–≤
/// </summary>
public class SetupSkillTestScene : EditorWindow
{
    [MenuItem("Tools/Skills/Setup Skill Test Scene")]
    public static void SetupScene()
    {
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ü–µ–Ω—É
        Scene scene = EditorSceneManager.OpenScene("Assets/Scenes/SkillTestScene.unity");

        Debug.Log("üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ü–µ–Ω—ã –¥–ª—è —Å–∫–∏–ª–ª–æ–≤...");

        // –ò—â–µ–º PlayerSpawnPoint
        GameObject spawnPoint = GameObject.Find("PlayerSpawnPoint");
        if (spawnPoint == null)
        {
            Debug.LogError("‚ùå PlayerSpawnPoint –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å—Ü–µ–Ω–µ!");
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ TestPlayer
        GameObject existingPlayer = GameObject.Find("TestPlayer");
        if (existingPlayer != null)
        {
            Debug.Log("‚ö†Ô∏è TestPlayer —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–π...");
            DestroyImmediate(existingPlayer);
        }

        // –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        GameObject testPlayer = new GameObject("TestPlayer");
        testPlayer.transform.position = spawnPoint.transform.position;
        testPlayer.transform.rotation = spawnPoint.transform.rotation;
        testPlayer.tag = "Player";
        testPlayer.layer = LayerMask.NameToLayer("Default");

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        CharacterController controller = testPlayer.AddComponent<CharacterController>();
        controller.center = new Vector3(0, 1, 0);
        controller.radius = 0.5f;
        controller.height = 2f;

        // CharacterStats (SPECIAL —Å–∏—Å—Ç–µ–º–∞)
        CharacterStats stats = testPlayer.AddComponent<CharacterStats>();
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ SPECIAL —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è –º–∞–≥–∞
        stats.strength = 3;       // –ù–∏–∑–∫–∞—è —Å–∏–ª–∞
        stats.perception = 5;     // –°—Ä–µ–¥–Ω–µ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ
        stats.endurance = 4;      // –°—Ä–µ–¥–Ω—è—è –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å
        stats.wisdom = 8;         // –í—ã—Å–æ–∫–∞—è –º—É–¥—Ä–æ—Å—Ç—å (MP –∏ —Ä–µ–≥–µ–Ω)
        stats.intelligence = 9;   // –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç (–º–∞–≥. —É—Ä–æ–Ω)
        stats.agility = 4;        // –°—Ä–µ–¥–Ω—è—è –ª–æ–≤–∫–æ—Å—Ç—å
        stats.luck = 5;           // –°—Ä–µ–¥–Ω—è—è —É–¥–∞—á–∞

        // HealthSystem
        HealthSystem health = testPlayer.AddComponent<HealthSystem>();

        // ManaSystem
        ManaSystem mana = testPlayer.AddComponent<ManaSystem>();

        // Animator (–Ω—É–∂–µ–Ω –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π –∫–∞—Å—Ç–∞)
        Animator animator = testPlayer.AddComponent<Animator>();
        // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å animator controller –º–∞–≥–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        RuntimeAnimatorController animController = AssetDatabase.LoadAssetAtPath<RuntimeAnimatorController>(
            "Assets/Resources/Characters/MageAnimatorController.controller"
        );
        if (animController != null)
        {
            animator.runtimeAnimatorController = animController;
            Debug.Log("‚úÖ Animator Controller –∑–∞–≥—Ä—É–∂–µ–Ω");
        }
        else
        {
            Debug.LogWarning("‚ö†Ô∏è MageAnimatorController –Ω–µ –Ω–∞–π–¥–µ–Ω - –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–∞—Å—Ç–∞ –Ω–µ –±—É–¥—É—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è");
            Debug.LogWarning("   –≠—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ - —Å–∫–∏–ª–ª—ã –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–π");
        }

        // SkillExecutor (–ù–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê)
        SkillExecutor skillExecutor = testPlayer.AddComponent<SkillExecutor>();

        // EffectManager (–ù–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê)
        EffectManager effectManager = testPlayer.AddComponent<EffectManager>();

        // PlayerAttackNew (–¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)
        PlayerAttackNew attackNew = testPlayer.AddComponent<PlayerAttackNew>();

        // –ü—Ä–æ—Å—Ç–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–º–µ—Ä–æ–π
        testPlayer.AddComponent<SimplePlayerController>();

        // –°–æ–∑–¥–∞—ë–º –≤–∏–∑—É–∞–ª –∏–≥—Ä–æ–∫–∞ (–ø—Ä–æ—Å—Ç–æ–π capsule)
        GameObject visual = GameObject.CreatePrimitive(PrimitiveType.Capsule);
        visual.name = "Visual";
        visual.transform.SetParent(testPlayer.transform);
        visual.transform.localPosition = new Vector3(0, 1, 0);
        visual.transform.localScale = Vector3.one;

        // –£–¥–∞–ª—è–µ–º Collider —É –≤–∏–∑—É–∞–ª–∞ (Collider —É–∂–µ –µ—Å—Ç—å –Ω–∞ CharacterController)
        DestroyImmediate(visual.GetComponent<CapsuleCollider>());

        // –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç –Ω–∞ —Å–∏–Ω–∏–π (–º–∞–≥)
        Material mat = new Material(Shader.Find("Universal Render Pipeline/Lit"));
        mat.color = Color.blue;
        visual.GetComponent<Renderer>().material = mat;

        // –°–æ–∑–¥–∞—ë–º —Ç–æ—á–∫—É —Å–ø–∞–≤–Ω–∞ —Å–Ω–∞—Ä—è–¥–æ–≤
        GameObject projectileSpawn = new GameObject("ProjectileSpawnPoint");
        projectileSpawn.transform.SetParent(testPlayer.transform);
        projectileSpawn.transform.localPosition = new Vector3(0, 1.5f, 0.5f);

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞–º–µ—Ä—É
        Camera mainCam = Camera.main;
        if (mainCam != null)
        {
            mainCam.transform.position = testPlayer.transform.position + new Vector3(0, 10, -10);
            mainCam.transform.LookAt(testPlayer.transform.position + Vector3.up * 2);
        }

        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        // –ó–ê–ì–†–£–ñ–ê–ï–ú –°–ö–ò–õ–õ–´ –ú–ê–ì–ê
        // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

        // Slot 0: Fireball
        SkillConfig fireball = AssetDatabase.LoadAssetAtPath<SkillConfig>(
            "Assets/Resources/Skills/Mage_Fireball.asset"
        );
        if (fireball == null)
        {
            fireball = AssetDatabase.LoadAssetAtPath<SkillConfig>(
                "Assets/ScriptableObjects/Skills/Mage/Mage_Fireball.asset"
            );
        }

        // Slot 1: Ice Nova
        SkillConfig iceNova = AssetDatabase.LoadAssetAtPath<SkillConfig>(
            "Assets/Resources/Skills/Mage_IceNova.asset"
        );
        if (iceNova == null)
        {
            iceNova = AssetDatabase.LoadAssetAtPath<SkillConfig>(
                "Assets/ScriptableObjects/Skills/Mage/Mage_IceNova.asset"
            );
        }

        // Slot 2: Lightning Storm
        SkillConfig lightningStorm = AssetDatabase.LoadAssetAtPath<SkillConfig>(
            "Assets/Resources/Skills/Mage_LightningStorm.asset"
        );

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–∫–∏–ª–ª—ã –≤ equippedSkills
        skillExecutor.equippedSkills.Clear();

        if (fireball != null)
        {
            skillExecutor.equippedSkills.Add(fireball);
            Debug.Log("‚úÖ Slot 0: Fireball");
        }
        else
        {
            Debug.LogWarning("‚ö†Ô∏è Mage_Fireball –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }

        if (iceNova != null)
        {
            skillExecutor.equippedSkills.Add(iceNova);
            Debug.Log("‚úÖ Slot 1: Ice Nova");
        }
        else
        {
            Debug.LogWarning("‚ö†Ô∏è Mage_IceNova –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }

        if (lightningStorm != null)
        {
            skillExecutor.equippedSkills.Add(lightningStorm);
            Debug.Log("‚úÖ Slot 2: Lightning Storm");
        }
        else
        {
            Debug.LogWarning("‚ö†Ô∏è Mage_LightningStorm –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ü–µ–Ω—É
        EditorSceneManager.MarkSceneDirty(scene);
        EditorSceneManager.SaveScene(scene);

        // –í—ã–¥–µ–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
        Selection.activeGameObject = testPlayer;
        EditorGUIUtility.PingObject(testPlayer);

        Debug.Log("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ü–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!");
        Debug.Log("üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:");
        Debug.Log("1. –°–æ–∑–¥–∞–π—Ç–µ Mage_Fireball: Tools ‚Üí Skills ‚Üí Create Mage Fireball");
        Debug.Log("2. –î–æ–±–∞–≤—å—Ç–µ Mage_Fireball –≤ TestPlayer ‚Üí SkillExecutor ‚Üí Equipped Skills[0]");
        Debug.Log("3. –ù–∞–∂–º–∏—Ç–µ Play");
        Debug.Log("4. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: WASD - –¥–≤–∏–∂–µ–Ω–∏–µ, –õ–ö–ú - –≤—ã–±–æ—Ä –≤—Ä–∞–≥–∞, 1 - Fireball");
    }
}
