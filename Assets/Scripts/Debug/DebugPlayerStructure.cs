using UnityEngine;

/// <summary>
/// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏ –∫–∞–º–µ—Ä—ã –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã
/// –ù–∞–∂–º–∏ F9 —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
/// </summary>
public class DebugPlayerStructure : MonoBehaviour
{
    void Update()
    {
        if (Input.GetKeyDown(KeyCode.F9))
        {
            ShowDebugInfo();
        }
    }

    void ShowDebugInfo()
    {
        Debug.Log("=== DEBUG: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏ –∫–∞–º–µ—Ä—ã ===");

        // –ò—â–µ–º –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
        GameObject[] players = new GameObject[]
        {
            GameObject.Find("WarriorPlayer"),
            GameObject.Find("MagePlayer"),
            GameObject.Find("ArcherPlayer"),
            GameObject.Find("RoguePlayer"),
            GameObject.Find("PaladinPlayer")
        };

        GameObject activePlayer = null;
        foreach (GameObject p in players)
        {
            if (p != null)
            {
                activePlayer = p;
                break;
            }
        }

        if (activePlayer != null)
        {
            Debug.Log($"\nüë§ –ê–∫—Ç–∏–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂: {activePlayer.name}");
            Debug.Log($"   –ü–æ–∑–∏—Ü–∏—è: {activePlayer.transform.position}");

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –¥–µ—Ç–µ–π
            Debug.Log($"   –î–æ—á–µ—Ä–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã ({activePlayer.transform.childCount}):");
            for (int i = 0; i < activePlayer.transform.childCount; i++)
            {
                Transform child = activePlayer.transform.GetChild(i);
                Debug.Log($"     - {child.name} (pos: {child.localPosition})");

                // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ —Ä–µ–±–µ–Ω–∫–µ
                CharacterController childCC = child.GetComponent<CharacterController>();
                if (childCC != null)
                {
                    Debug.LogWarning($"       ‚ö† CharacterController –Ω–∞ –†–ï–ë–ï–ù–ö–ï! (center: {childCC.center}, height: {childCC.height})");
                }
            }

            // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª–µ
            Debug.Log($"\n   –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª–µ:");
            CharacterController parentCC = activePlayer.GetComponent<CharacterController>();
            if (parentCC != null)
            {
                Debug.Log($"     ‚úì CharacterController (center: {parentCC.center}, height: {parentCC.height})");
            }
            else
            {
                Debug.LogError($"     ‚úó CharacterController –ù–ï –ù–ê–ô–î–ï–ù!");
            }

            Animator animator = activePlayer.GetComponent<Animator>();
            if (animator != null)
            {
                Debug.Log($"     ‚úì Animator");
            }

            PlayerController pc = activePlayer.GetComponent<PlayerController>();
            if (pc != null)
            {
                Debug.Log($"     ‚úì PlayerController");
            }
        }
        else
        {
            Debug.LogError("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–º–µ—Ä—É
        Camera mainCamera = Camera.main;
        if (mainCamera != null)
        {
            Debug.Log($"\nüìπ Main Camera:");
            Debug.Log($"   –ü–æ–∑–∏—Ü–∏—è: {mainCamera.transform.position}");

            TPSCameraController tps = mainCamera.GetComponent<TPSCameraController>();
            if (tps != null)
            {
                Debug.Log($"   ‚úì TPSCameraController –Ω–∞–π–¥–µ–Ω");
                // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å target —á–µ—Ä–µ–∑ reflection
                var targetField = typeof(TPSCameraController).GetField("target", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);
                if (targetField != null)
                {
                    Transform target = (Transform)targetField.GetValue(tps);
                    if (target != null)
                    {
                        Debug.Log($"   ‚úì Target: {target.name} (pos: {target.position})");
                    }
                    else
                    {
                        Debug.LogError($"   ‚úó Target = NULL!");
                    }
                }
            }
            else
            {
                Debug.LogWarning($"   ‚ö† TPSCameraController –Ω–µ –Ω–∞–π–¥–µ–Ω");
            }

            CameraFollow oldCam = mainCamera.GetComponent<CameraFollow>();
            if (oldCam != null)
            {
                Debug.LogWarning($"   ‚ö† –°—Ç–∞—Ä—ã–π CameraFollow –≤—Å—ë –µ—â—ë –Ω–∞ –∫–∞–º–µ—Ä–µ!");
            }
        }

        Debug.Log("\n=== –ö–æ–Ω–µ—Ü –æ—Ç–ª–∞–¥–∫–∏ ===");
    }
}
