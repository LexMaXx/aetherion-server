using UnityEngine;

/// <summary>
/// –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –±–æ–µ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
/// –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –∞—Ç–∞–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö —á–µ—Ä–µ–∑ WebSocket
/// </summary>
[RequireComponent(typeof(PlayerAttack))]
public class NetworkCombatSync : MonoBehaviour
{
    [Header("Settings")]
    [SerializeField] private bool enableSync = true;

    private PlayerAttack playerAttack;
    private HealthSystem healthSystem;
    private ManaSystem manaSystem;
    private bool isMultiplayer = false;

    // Cooldown –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ HP/MP (–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä)
    private float lastHealthSync = 0f;
    private float healthSyncInterval = 0.5f; // –†–∞–∑ –≤ 0.5 —Å–µ–∫—É–Ω–¥—ã

    void Start()
    {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä —Ä–µ–∂–∏–º
        string roomId = PlayerPrefs.GetString("CurrentRoomId", "");
        isMultiplayer = !string.IsNullOrEmpty(roomId);

        if (!isMultiplayer)
        {
            Debug.Log("[NetworkCombatSync] –û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞");
            enabled = false;
            return;
        }

        playerAttack = GetComponent<PlayerAttack>();
        healthSystem = GetComponent<HealthSystem>();
        manaSystem = GetComponent<ManaSystem>();

        if (healthSystem != null)
        {
            healthSystem.OnHealthChanged += OnHealthChanged;
            healthSystem.OnDeath += OnPlayerDeath;
        }

        if (manaSystem != null)
        {
            manaSystem.OnManaChanged += OnManaChanged;
        }

        Debug.Log("[NetworkCombatSync] ‚úÖ –ë–æ–µ–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞");
    }

    void Update()
    {
        if (!enableSync || !isMultiplayer) return;

        // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º HP/MP
        if (Time.time - lastHealthSync > healthSyncInterval)
        {
            SyncHealth();
            lastHealthSync = Time.time;
        }
    }

    /// <summary>
    /// –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞—Ç–∞–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    /// –í–ê–ñ–ù–û: –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∏–∑ PlayerAttack –ø–æ—Å–ª–µ –Ω–∞–Ω–µ—Å–µ–Ω–∏—è —É—Ä–æ–Ω–∞
    /// </summary>
    public void SendAttack(GameObject target, float damage, string attackType)
    {
        if (!enableSync || !isMultiplayer || WebSocketClient.Instance == null)
            return;

        // –ü–æ–ª—É—á–∞–µ–º socketId —Ü–µ–ª–∏ (–µ—Å–ª–∏ —ç—Ç–æ NetworkPlayer)
        string targetSocketId = "";
        NetworkPlayer networkTarget = target.GetComponent<NetworkPlayer>();
        if (networkTarget != null)
        {
            targetSocketId = networkTarget.socketId;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        WebSocketClient.Instance.SendAttack(targetSocketId, damage, attackType);

        Debug.Log($"[NetworkCombatSync] ‚öîÔ∏è –ê—Ç–∞–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä: {damage} —É—Ä–æ–Ω–∞, —Ç–∏–ø: {attackType}");
    }

    /// <summary>
    /// –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∫–∏–ª–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    /// </summary>
    public void SendSkill(int skillId, GameObject target, Vector3 targetPosition)
    {
        if (!enableSync || !isMultiplayer || WebSocketClient.Instance == null)
            return;

        string targetSocketId = "";
        NetworkPlayer networkTarget = target?.GetComponent<NetworkPlayer>();
        if (networkTarget != null)
        {
            targetSocketId = networkTarget.socketId;
        }

        WebSocketClient.Instance.SendSkill(skillId, targetSocketId, targetPosition);

        Debug.Log($"[NetworkCombatSync] üîÆ –°–∫–∏–ª–ª {skillId} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä");
    }

    /// <summary>
    /// –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ/–º–∞–Ω—É —Å —Å–µ—Ä–≤–µ—Ä–æ–º
    /// </summary>
    private void SyncHealth()
    {
        if (WebSocketClient.Instance == null || !WebSocketClient.Instance.IsConnected)
            return;

        int currentHP = healthSystem != null ? healthSystem.CurrentHealth : 0;
        int maxHP = healthSystem != null ? healthSystem.MaxHealth : 100;
        int currentMP = manaSystem != null ? manaSystem.CurrentMana : 0;
        int maxMP = manaSystem != null ? manaSystem.MaxMana : 100;

        WebSocketClient.Instance.UpdateHealth(currentHP, maxHP, currentMP, maxMP);
    }

    /// <summary>
    /// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è
    /// </summary>
    private void OnHealthChanged(int current, int max)
    {
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—Ä–æ–Ω–∞
        SyncHealth();
    }

    /// <summary>
    /// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∞–Ω—ã
    /// </summary>
    private void OnManaChanged(int current, int max)
    {
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –º–∞–Ω—ã
        SyncHealth();
    }

    /// <summary>
    /// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ—Ä—Ç–∏ –∏–≥—Ä–æ–∫–∞
    /// </summary>
    private void OnPlayerDeath()
    {
        Debug.Log("[NetworkCombatSync] üíÄ –ò–≥—Ä–æ–∫ –ø–æ–≥–∏–±");

        // –°–µ—Ä–≤–µ—Ä —É–∂–µ –∑–Ω–∞–µ—Ç –æ –Ω–∞—à–µ–π —Å–º–µ—Ä—Ç–∏ —á–µ—Ä–µ–∑ health update
        // –ó–¥–µ—Å—å –º–æ–∂–µ–º –ø–æ–∫–∞–∑–∞—Ç—å UI —Å–º–µ—Ä—Ç–∏
    }

    void OnDestroy()
    {
        // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–æ–±—ã—Ç–∏–π
        if (healthSystem != null)
        {
            healthSystem.OnHealthChanged -= OnHealthChanged;
            healthSystem.OnDeath -= OnPlayerDeath;
        }

        if (manaSystem != null)
        {
            manaSystem.OnManaChanged -= OnManaChanged;
        }
    }
}
