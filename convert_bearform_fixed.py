#!/usr/bin/env python3
"""
–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç Paladin_BearForm.asset –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ SkillData –≤ –Ω–æ–≤—ã–π SkillConfig
–°–û–•–†–ê–ù–Ø–Ø –í–°–Æ –ú–ï–•–ê–ù–ò–ö–£ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
"""

file_path = "Assets/Resources/Skills/Paladin_BearForm.asset"

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
with open(file_path, 'r', encoding='utf-8') as f:
    lines = f.readlines()

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
new_lines = []
for line in lines:
    # 1. –ó–∞–º–µ–Ω—è–µ–º GUID: —Å—Ç–∞—Ä—ã–π SkillData ‚Üí –Ω–æ–≤—ã–π SkillConfig
    if "guid: 6e79cfd8b12443c408c3d4a9fbdce0c8" in line:
        line = line.replace("6e79cfd8b12443c408c3d4a9fbdce0c8", "93ea6d4f751c12e48a5c2881809ebb04")
        print("‚úÖ GUID –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ SkillConfig")

    # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º m_Name –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
    if "m_Name: BearForm" in line:
        line = line.replace("m_Name: BearForm", "m_Name: Paladin_BearForm")
        print("‚úÖ m_Name –∏–∑–º–µ–Ω—ë–Ω: BearForm ‚Üí Paladin_BearForm")

    # 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º skillId: 401 ‚Üí 501 (–ø–µ—Ä–≤—ã–π —Å–∫–∏–ª–ª –ø–∞–ª–∞–¥–∏–Ω–∞)
    if "skillId: 401" in line:
        line = line.replace("skillId: 401", "skillId: 501")
        print("‚úÖ skillId –∏–∑–º–µ–Ω—ë–Ω: 401 ‚Üí 501")

    # 4. –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º physicalDamageBonusPercent ‚Üí damageBonusPercent
    if "physicalDamageBonusPercent:" in line:
        line = line.replace("physicalDamageBonusPercent:", "damageBonusPercent:")
        print("‚úÖ –ü–æ–ª–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ: physicalDamageBonusPercent ‚Üí damageBonusPercent")

    new_lines.append(line)

# –ù–∞—Ö–æ–¥–∏–º –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–æ–ª–µ–π SkillConfig
# –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å strengthScaling, –ø–æ—Å–ª–µ –Ω–µ—ë –≤—Å—Ç–∞–≤–∏–º lifeStealPercent
insert_index = -1
for i, line in enumerate(new_lines):
    if "strengthScaling:" in line:
        insert_index = i + 1
        break

# –í—Å—Ç–∞–≤–ª—è–µ–º lifeStealPercent –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if insert_index > 0:
    has_lifesteal = any("lifeStealPercent:" in line for line in new_lines)
    if not has_lifesteal:
        new_lines.insert(insert_index, "  lifeStealPercent: 0\n")
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ: lifeStealPercent")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π SkillConfig –≤ –∫–æ–Ω—Ü–µ —Ñ–∞–π–ª–∞
required_fields = {
    "projectileSpeed": "  projectileSpeed: 20\n",
    "projectileLifetime": "  projectileLifetime: 5\n",
    "projectileHoming": "  projectileHoming: 1\n",
    "homingSpeed": "  homingSpeed: 10\n",
    "homingRadius": "  homingRadius: 20\n",
    "castEffectPrefab": "  castEffectPrefab: {fileID: 0}\n",
    "hitEffectPrefab": "  hitEffectPrefab: {fileID: 0}\n",
    "aoeEffectPrefab": "  aoeEffectPrefab: {fileID: 0}\n",
    "casterEffectPrefab": "  casterEffectPrefab: {fileID: 0}\n",
    "animationSpeed": "  animationSpeed: 1\n",
    "projectileSpawnTiming": "  projectileSpawnTiming: 0.5\n",
    "hitSound": "  hitSound: {fileID: 0}\n",
    "soundVolume": "  soundVolume: 0.8\n",
    "enableMovement": "  enableMovement: 0\n",
    "movementType": "  movementType: 0\n",
    "movementDistance": "  movementDistance: 5\n",
    "movementSpeed": "  movementSpeed: 10\n",
    "movementDirection": "  movementDirection: 0\n",
    "syncProjectiles": "  syncProjectiles: 0\n",
    "syncHitEffects": "  syncHitEffects: 1\n",
    "syncStatusEffects": "  syncStatusEffects: 1\n",
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –ø–æ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
content_str = ''.join(new_lines)
missing_fields = []
for field_name, field_line in required_fields.items():
    if field_name + ":" not in content_str:
        missing_fields.append(field_line)

# –î–æ–±–∞–≤–ª—è–µ–º customData –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if "customData:" not in content_str:
    missing_fields.extend([
        "  customData:\n",
        "    chainCount: 0\n",
        "    chainRadius: 8\n",
        "    chainDamageMultiplier: 0.7\n",
        "    hitCount: 1\n",
        "    hitDelay: 0.1\n",
        "    manaRestorePercent: 0\n",
        "    piercing: 0\n",
        "    maxPierceTargets: 3\n"
    ])

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –≤ –∫–æ–Ω–µ—Ü (–ø–µ—Ä–µ–¥ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π)
if missing_fields:
    # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
    if new_lines[-1].strip() == "":
        new_lines = new_lines[:-1]

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è
    new_lines.extend(missing_fields)
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(missing_fields)} –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–æ–ª–µ–π SkillConfig")

# –°–æ—Ö—Ä–∞–Ω—è–µ–º
with open(file_path, 'w', encoding='utf-8') as f:
    f.writelines(new_lines)

print(f"\n‚úÖ‚úÖ‚úÖ –§–∞–π–ª {file_path} —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!")
print(f"\nüîß –°–û–•–†–ê–ù–Å–ù–ù–ê–Ø –ú–ï–•–ê–ù–ò–ö–ê BEARFORM:")
print(f"   - transformationModel: {fileID: 2392146731170012137, guid: 854220d1cd63d4049a99e4c4ec58555e}")
print(f"   - transformationDuration: 30")
print(f"   - hpBonusPercent: 50")
print(f"   - damageBonusPercent: 30 (–±—ã–ª–æ physicalDamageBonusPercent)")
