#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ç—á–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–Ω–∞—Ä—è–¥–æ–≤
"""

import os
import re

def apply_projectile_sync_fix():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–Ω–∞—Ä—è–¥–æ–≤"""

    # –ü—É—Ç—å –∫ SkillExecutor.cs
    skill_executor_path = "Assets/Scripts/Skills/SkillExecutor.cs"

    print("[1/4] –ß—Ç–µ–Ω–∏–µ SkillExecutor.cs...")
    with open(skill_executor_path, 'r', encoding='utf-8') as f:
        content = f.read()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø–∞—Ç—á –µ—â—ë –Ω–µ –ø—Ä–∏–º–µ–Ω—ë–Ω
    if "üöÄ –ù–û–í–û–ï: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–Ω–∞—Ä—è–¥–∞ –≤ –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–µ" in content:
        print("‚ö†Ô∏è  –ü–∞—Ç—á —É–∂–µ –ø—Ä–∏–º–µ–Ω—ë–Ω –∫ SkillExecutor.cs")
        return

    print("[2/4] –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ç—á–∞ –∫ LaunchProjectile()...")

    # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ (–ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–Ω–∞—Ä—è–¥–∞)
    pattern = r'(GameObject projectile = Instantiate\(skill\.projectilePrefab, spawnPos, Quaternion\.LookRotation\(direction\)\);)\s*\n\s*(// Try CelestialProjectile first)'

    replacement = r'''\1

        // üöÄ –ù–û–í–û–ï: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–Ω–∞—Ä—è–¥–∞ –≤ –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–µ
        string targetSocketId = "";
        if (target != null)
        {
            NetworkPlayer networkTarget = target.GetComponent<NetworkPlayer>();
            if (networkTarget != null)
            {
                targetSocketId = networkTarget.socketId;
            }
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
        SocketIOManager socketIO = SocketIOManager.Instance;
        if (socketIO != null && socketIO.IsConnected)
        {
            socketIO.SendProjectileSpawned(skill.skillId, spawnPos, direction, targetSocketId);
            Log($"üåê –°–Ω–∞—Ä—è–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä: {skill.skillName}");
        }

        \2'''

    content = re.sub(pattern, replacement, content)

    print("[3/4] –ò–∑–º–µ–Ω–µ–Ω–∏–µ SpawnEffect –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")

    # –ò–∑–º–µ–Ω—è–µ–º –≤—ã–∑–æ–≤ SpawnEffect –≤ LaunchProjectile
    content = content.replace(
        'SpawnEffect(skill.castEffectPrefab, spawnPos, Quaternion.identity);',
        'SpawnEffect(skill.castEffectPrefab, spawnPos, Quaternion.identity, true); // true = —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å'
    )

    # –ò–∑–º–µ–Ω—è–µ–º —Å–∏–≥–Ω–∞—Ç—É—Ä—É –º–µ—Ç–æ–¥–∞ SpawnEffect
    content = content.replace(
        'private void SpawnEffect(GameObject effectPrefab, Vector3 position, Quaternion rotation)',
        'private void SpawnEffect(GameObject effectPrefab, Vector3 position, Quaternion rotation, bool syncToNetwork = false)'
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤ SpawnEffect
    spawn_effect_pattern = r'(private void SpawnEffect\(GameObject effectPrefab, Vector3 position, Quaternion rotation, bool syncToNetwork = false\)\s*\{\s*if \(effectPrefab == null\) return;\s*GameObject effect = Instantiate\(effectPrefab, position, rotation\);)'

    spawn_effect_replacement = r'''\1

        // üåê –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤ –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–µ
        if (syncToNetwork)
        {
            SocketIOManager socketIO = SocketIOManager.Instance;
            if (socketIO != null && socketIO.IsConnected)
            {
                socketIO.SendVisualEffect(
                    "cast",
                    effectPrefab.name,
                    position,
                    rotation,
                    "", // targetSocketId –ø—É—Å—Ç–æ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –∫–∞—Å—Ç–∞
                    3f, // duration
                    null
                );
                Log($"üé® –≠—Ñ—Ñ–µ–∫—Ç –∫–∞—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä: {effectPrefab.name}");
            }
        }'''

    content = re.sub(spawn_effect_pattern, spawn_effect_replacement, content)

    print("[4/4] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
    with open(skill_executor_path, 'w', encoding='utf-8') as f:
        f.write(content)

    print("‚úÖ SkillExecutor.cs —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É projectile_spawned –≤ NetworkSyncManager.cs")
    print("2. –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ DisableDamage() –≤ Projectile.cs")
    print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–µ")
    print("\n–°–º. PROJECTILE_SYNC_FIX.md –¥–ª—è –¥–µ—Ç–∞–ª–µ–π")

if __name__ == "__main__":
    os.chdir(os.path.dirname(os.path.abspath(__file__)))
    apply_projectile_sync_fix()
